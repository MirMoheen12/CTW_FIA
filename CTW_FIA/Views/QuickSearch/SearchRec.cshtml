@model IEnumerable<CTW_FIA.Models.Dto.QuickSearchModel>
@{
    string STRUN = "99";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .table-responsive 
    {
        max-height: 650px;
    }
    .distance
    {
    padding-top:10px;
    }
    /*Closed folder icon */
    .closed-folder-icon {
        color: #000; /* Change to the color of your closed folder icon */
    }

    .custom-li {
        margin-left: -58px; /* Adjust this value as needed */
    }
    /* Add this CSS to your stylesheet */
    .custom-sublist {
        margin-left: 10px; /* Adjust the margin-left value as needed */
    }

    .nav.flex-column li.distance {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        max-width: 50ch; /* Adjust this value to your desired maximum width */
        
    }

      





    /* Open folder icon */
    .open-folder-icon {
        color: #00F; /* Change to the color of your open folder icon */
    }

    .open-link {
        color: blue; /* Set the desired blue color for open links */
    }

    .open-color {
        color:blue; /* Replace with your desired color */
    }

    .smaller-icon
    {
        font-size: 0.6em;
        margin-right: 5px;
    }

    .menu-icon 
    {
        margin-right: 2px; 
    }

    .badge-info {
        border-radius: 12px; /* Adjust the radius as needed for the desired roundness */
        margin-left: 5px;
    }

</style>
<style>
    .card-grey  
    {

        background-color: #d3d3d3; 
        
    }

    .open-icon {
        color: green; /* Color for open icon */
    }

    .closed-icon {
        color: red; /* Color for closed icon */
    }

    /* Add custom styles for open tables */
    .open-table {
        background-color: yellow; /* Background color for open tables */
    }
    .nav-link i
    {
        margin-right: 5px; 
    }

    .nav-link
    {
        color: black;
    }
    .table-responsive
    {
        max-height: 650px;
    }
</style>


<div class="row no-gutters">
    <div class="col-md-9 grid-margin stretch-card">
        <div class="card ">
            <input id="searchval" value="@ViewBag.searchval" hidden />
            <div id="exptopdf" class="pdfpage" style="background: #FFFFFF;">

                <div class="d-flex p-2  justify-content-center"><b>@ViewData["Title"]</b></div>
                <br />
                <table id="SearchGenericTable" class="table table-bordered text-dark">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Value</th>
                        </tr>
                    </thead>
                    <tbody id="Tblbody">
                    </tbody>
                </table>


            </div>
        </div>
    </div>
    <div class="row no-gutters col-md-3" style="max-height:300px;">

        <div class="col-md-12 d-flex justify-content-center" >
            <img src="/Content/assets/images/logo.png" alt="Logo" style="max-height:250px; margin-top:10px;">
        </div>

        <div class="col-md-12">
            <div class="card card-tabs" style="margin-top:25px;">
                <div class="card-header p-0 pt-1" id="tabs">
                    <ul class="nav nav-tabs card-grey" id="custom-tabs-two-tab" role="tablist">
                        <li class="nav-item">
                            <a class="nav-link" id="custom-tabs-two-home-tab" data-toggle="pill" href="#custom-tabs-two-home" role="tab" aria-controls="custom-tabs-two-home" aria-selected="true">Link Record</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" id="custom-tabs-two-profile-tab" data-toggle="pill" href="#custom-tabs-two-profile" role="tab" aria-controls="custom-tabs-two-profile" aria-selected="false">Media</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" id="custom-tabs-two-messages-tab" data-toggle="pill" href="#custom-tabs-two-messages" role="tab" aria-controls="custom-tabs-two-messages" aria-selected="false">Index</a>
                        </li>

                    </ul>
                </div>
                <div class="card-body">
                    <div class="tab-content" id="custom-tabs-two-tabContent">
                        <div class="tab-pane fade show active" id="custom-tabs-two-home" role="tabpanel" aria-labelledby="custom-tabs-two-home-tab">
                            <div class="sidebar">
                                <nav class="mt-1">
                                    <ul id="link_ul_id" class="flex-column nav-child-indent nav-compact" style="list-style-type:none" data-widget="treeview" role="list" data-accordion="false">
                                        <li class="nav-item custom-li">
                                            <a href="#" class="nav-link">
                                                <span class="menu-icon">
                                                    <i class="fas fa-plus smaller-icon" data-clickable="true"> </i>
                                                </span>
                                                <i class="fas fa-folder" data-clickable="false"></i>
                                                Address
                                            </a>
                                            <ul id="address-list" class="nav flex-column collapse ml-5">
                                                <li class="distance">Address Item 1</li>
                                                <li class="distance">Address Item 2</li>
                                            </ul>
                                        </li>
                                        <li class="nav-item custom-li">
                                            <a href="#" class="nav-link">
                                                <span class="menu-icon">
                                                    <i class="fas fa-plus smaller-icon" data-clickable="true"> </i>
                                                </span>
                                                <i class="fas fa-folder" data-clickable="false"></i>
                                                Firearms
                                            </a>
                                            <ul id="firearms-list" class="nav flex-column collapse ml-5">
                                                <li class="distance">Firearm Item 1</li>
                                                <li class="distance">Firearm Item 2</li>
                                            </ul>
                                        </li>
                                        <li class="nav-item custom-li">
                                            <a href="#" class="nav-link">
                                                <span class="menu-icon">
                                                    <i class="fas fa-plus smaller-icon" data-clickable="true"> </i>
                                                </span>
                                                <i class="fas fa-folder" data-clickable="false"></i>
                                                Detonators
                                            </a>
                                            <ul id="detonators-list" class="nav flex-column collapse ml-5">
                                                <li class="distance">Detonator Item 1</li>
                                                <li class="distance">Detonator Item 2</li>
                                            </ul>
                                        </li>
                                    </ul>
                                </nav>
                            </div>
                        </div>

                        <div class="tab-pane fade" id="custom-tabs-two-profile" role="tabpanel" aria-labelledby="custom-tabs-two-profile-tab">
                            <ul id="media_ul_id" class="nav flex-column"></ul>
                        </div>
                        <div class="tab-pane fade" id="custom-tabs-two-messages" role="tabpanel" aria-labelledby="custom-tabs-two-messages-tab">
                            Index
                        </div>

                    </div>
                </div>

            </div>


        </div>

    </div>



</div>
<style>
    .floating-buttons {
        position: absolute;
        top: 15%;
        left: 50%;
        transform: translate(-50%, -50%);
    }
</style>
@if (!string.IsNullOrEmpty(ViewBag.RedirectUrl))
{
    <script>
        // Show a dialog box with the success message
        alert('Update was successful!');
        // Redirect after user acknowledgment
        window.location.href = '@ViewBag.RedirectUrl';
    </script>
}
<link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css" rel="stylesheet">

<script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/1.11.4/js/jquery.dataTables.js"></script>

<!-- Include DataTables Buttons CSS and JavaScript -->
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/buttons/2.0.1/css/buttons.dataTables.min.css">
<script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/buttons/2.0.1/js/dataTables.buttons.min.js"></script>
<script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/buttons/2.0.1/js/buttons.html5.min.js"></script>

<!-- Include DataTables Responsive CSS and JavaScript -->
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/responsive/2.2.9/css/responsive.dataTables.min.css">
<script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/responsive/2.2.9/js/dataTables.responsive.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

<script>
    var dataTable = $('#SearchGenericTable2').DataTable();
    // Initialize DataTable
    var sourcearray = @Html.Raw(Json.Serialize(Model));

    $(document).ready(function () 
    {
        dataTable = $('#SearchGenericTable').DataTable({
            paging: false, // Enable pagination
            searching: true, // Enable global search
            ordering: false, // Enable column sorting
            info: false, // Display information about the table (e.g., "Showing x to y of z entries")
            lengthChange: true, // Allow users to change the number of rows per page
            dom: 'Bfrtip', // Enable DataTables Buttons extension
            buttons: ['copy', 'csv', 'excel', 'pdf', 'print', 'delete'], // Available export formats
            responsive: true, // Enable responsive design for different screen sizes
            columnDefs: [
                { responsivePriority: 1, targets: 0 }, // Example: Define responsive priorities for columns
            ],
            language: {
                url: '' // Load language file
            }
        });
        searchrec();
    });
    function searchrec()
    {
        var m = 0;
        var modelList = sourcearray;
        var groupedByTableName = {};

        if (sourcearray.length > 0) {
            $.each(modelList, function (index, model) { 
                var tableName = model.tableName;
                //alert(tableName);
                if (!groupedByTableName[tableName]) {
                    groupedByTableName[tableName] = {
                        count: 0,
                        models: []
                    };
                }
                
                groupedByTableName[tableName].count++;
                groupedByTableName[tableName].models.push(model);
            });

            $('#leftnavbar').hide();

            // Define the desired table order
            var desiredTableOrder = ["Incident", "Person", "Group", "Explosive"];
            

            // Iterate over the desired table order and append the tables accordingly
            for (var i = 0; i < desiredTableOrder.length; i++) {
                var tableName = desiredTableOrder[i];
                var tableGroup = groupedByTableName[tableName];

                if (tableGroup) {
                    //var tableIcons = {
                    //    'Explosive': 'fas fa-fire',
                    //    'Group': 'fas fa-users',
                    //    'Incident': 'fas fa-exclamation-triangle',
                    //    'Person': 'fas fa-user'
                    //};

                    // Use the appropriate icon class based on the table name
                    //var iconClass = tableIcons[tableName] || 'fas fa-question'; // Default icon if not found

                    $('.sidebar nav .nav-pills').append(
                        '<li class="nav-item"><a href="#" class="nav-link"><span class="menu-icon"><i class="fas fa-plus smaller-icon" data-clickable="true"> </i></span><i class="fas fa-folder" data-clickable="false"></i>' + tableName +'<span class="badge badge-info">'+tableGroup.count+'</span> </a> <ul class="nav nav-treeview" id="' + tableName + '"></ul>');

                    for (var x = 0; x < tableGroup.models.length; x++)
                    {
                        if (tableGroup.models[x].tableName == tableName) 
                        {
                            $('#'+tableName).append("<li class='nav-item'> <button class='btn btn-default btn-block text-left' onclick='yourFunction(\"" + tableName + "\", \"" + tableGroup.models[x].strUrn + "\")'> <i class='fas fa-caret-right' style='font-size: smaller; margin-right: 4px;';></i>" + tableGroup.models[x].textSearch + "</button></li>");
                        }
                        if (m == 1)
                        {
                            yourFunction(tableName, tableGroup.models[1].strUrn);
                        }
                        m = m + 1;
                    }

                }
            }
        }
    }

    function yourFunction(tableName, strUrn) 
    {
        //alert(strUrn);
        dataTable.clear().draw();
        $('.spinner').css('display', 'block');
        $.ajax({
            type: "GET",
            url: "/Record/RecordDetailsforQuick",
            data: { STRUN: strUrn, modelname: tableName },
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (response) {


                for (var i = 0; i < response.length; i++) {
                    var rowData = [
                        response[i].propertName,
                        response[i].propertValue

                    ];
                    dataTable.row.add(rowData).draw();

                    // $('#Tblbody').html('<tr><td>' + response[i].propertName + '</td><td>' + response[i].propertValue + '</td></tr>');

                }
                $('.spinner').css('display', 'none');



            },
            error: function (response) {
                alert("error");
            }
        });
        callrightSide(strUrn);
    }
    function callrightSide(strUrn) {
        $.ajax({
            type: "GET",
            url: "/Jsonside/DisplayRightSide",
            data: { strURN: strUrn },
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (response) {
                console.log(response);
                // Clear the list items in the specific tab's ul
                var activeTabList = $('#custom-tabs-two-home ul'); // Get the ul of the specific tab
                activeTabList.empty(); // Clear the container

                // Track unique table names
                var uniqueTableNames = [];
                
                for (var i = 0; i < response.length; i++) {
                    debugger;
                    var tableName = response[i].tableName; // Make sure the property name matches the data
                    var rightstrURN = response[i].strURN;
                    var lableName = response[i].lableName;

                    // Check if the table name is unique
                    if (!uniqueTableNames.includes(tableName)) {
                        uniqueTableNames.push(tableName);

                        // Create a new list item only if it's the first time for this table name
                        var listItem = $('<li>').addClass('nav-item custom-li');

                        // Create the anchor element with the desired structure, including icons
                        var anchor = $('<a>').addClass('nav-link');

                        // Add a click event handler to the anchor to toggle the sublist
                        anchor.click(function () {
                            var icon = anchor.find('.menu-icon i');
                            var button = listItem.find('.button-sublist');

                            if (icon.hasClass('fa-plus')) {
                                icon.removeClass('fa-plus closed-folder-icon').addClass('fa-minus open-folder-icon');
                                button.show();
                            } else {
                                icon.removeClass('fa-minus open-folder-icon').addClass('fa-plus closed-folder-icon');
                                button.hide();
                            }
                        });

                        anchor.append('<span class="menu-icon"><i class="fas fa-plus smaller-icon" data-clickable="true"> </i></span>');
                        anchor.append('<i class="fas fa-folder" data-clickable="false"></i>');
                        anchor.append(tableName); // Append the table name

                        // Create a button sublist under the list item and hide it by default

                        var buttonSublist = $('<ul>').addClass('nav flex-column custom-sublist').hide();

                        // Append buttons to the sublist
                        buttonSublist.append("<li class='distance'><button class='btn btn-default btn-block text-left' onclick='yourFunction(\"" + tableName + "\", \"" + rightstrURN + "\")'> <i class='fas fa-caret-right' style='font-size: smaller; margin-right: 4px;';></i>'" + lableName + "'</button></li>");

                        // Append the anchor element to the list item
                        listItem.append(anchor);

                        // Append the button sublist to the list item
                        listItem.append(buttonSublist);

                        // Append the list item to the "custom-tabs-two-home" tab's ul
                        activeTabList.append(listItem);
                    }
                }



            },

            

            error: function (response) {
                alert("error");
            }
        });
    }



   
    $(document).ready(function () 
    {
        $('#custom-tabs-two-home-tab').addClass('active');
        $('#custom-tabs-two-home').addClass('show active');
    });
        
    $(document).ready(function () {
        // Add click event handler to the "+" icons on the left side
            
        $('.sidebar.menu - icon i.fa-plus').click(function (e) {
            e.stopPropagation(); // Prevent the click event from propagating to the parent <a> element
            var icon = $(this);
            var link = icon.closest('a'); // Get the <a> element
            var elementsToColor = link.find('.menu-icon i, .fas.fa-folder, .table-name, .badge.badge-info');

            // Check if the icon has the "fa-plus" class
            if (icon.hasClass('fa-plus')) {
                icon.removeClass('fa-plus closed-folder-icon').addClass('fa-minus open-folder-icon');
                elementsToColor.addClass('open-color'); // Add the open-color class to change the text color

                // Change the color of .badge-info to blue
                var badgeInfo = link.find('.badge.badge-info');
                badgeInfo.css('background-color', 'blue');
                badgeInfo.css('color', 'white');

                // Reset the color of unencapsulated text to its original color
                link.css('color', 'blue'); // Reset the color of unencapsulated text inside <a>

                // Show the sublist
                link.next('ul').show();
            } else {
                // If the icon has the "fa-minus" class, close the sublist
                icon.removeClass('fa-minus open-folder-icon').addClass('fa-plus closed-folder-icon');
                elementsToColor.removeClass('open-color'); // Remove the open-color class to reset the text color

                // Reset the color of .badge-info to its default value (e.g., black)
                var badgeInfo = link.find('.badge.badge-info');
                badgeInfo.css('background-color', ''); // Remove the inline color style to reset it to default

                // Reset the color of unencapsulated text to its original color
                link.css('color', ''); // Reset the color of unencapsulated text inside <a>

                // Hide the sublist
                link.next('ul').hide();
            }
        });
    });

   
    // Add an event listener to toggle the list item when clicking the "+" or "-" icon on the right side
    $(document).ready(function () {
        // Add click event handler for the "+" icons on both sides
        $(document).on('click', '.menu-icon i.smaller-icon', function (e) {
            e.stopPropagation(); // Prevent the click event from propagating to the parent <a> element
            var icon = $(this);
            var link = icon.closest('a'); // Get the <a> element
            var elementsToColor = link.find('.menu-icon i, .fas.fa-folder, .table-name, .badge.badge-info');

            if (icon.hasClass('fa-plus')) {
                icon.removeClass('fa-plus closed-folder-icon').addClass('fa-minus open-folder-icon');
                elementsToColor.addClass('open-color');
                var badgeInfo = link.find('.badge.badge-info');
                badgeInfo.css('background-color', 'blue');
                badgeInfo.css('color', 'white');
                link.css('color', 'blue');
                link.next('ul').show();
            } 
            else
            {
                icon.removeClass('fa-minus open-folder-icon').addClass('fa-plus closed-folder-icon');
                elementsToColor.removeClass('open-color');
                var badgeInfo = link.find('.badge.badge-info');
                badgeInfo.css('background-color', '');
                link.css('color', '');
                link.next('ul').hide();
            }
        });
    });



</script>


